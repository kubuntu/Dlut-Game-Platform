#include "jmysqldatabasefactory.h"

#include "jmysqllogindb.h"
#include "jmysqluserinfodb.h"
#include "jmysqlgameinfodb.h"
#include "jmysqlserverinfodb.h"

#include <QSqlDatabase>
#include <QSqlQuery>
#include <QSqlError>
#include <QTextCodec>

#include <QDebug>

//int JMySQLDatabaseFactory::connectCount = 0;

JMySQLDatabaseFactory::JMySQLDatabaseFactory(QObject *parent) :
	JAbstractDatabaseFactory(parent)
{
//	if (!connectCount++) {
//		qDebug() << "connectCount = " << connectCount;

//		QTextCodec *codec = QTextCodec::codecForName("UTF-8");
//		QTextCodec::setCodecForCStrings(codec);
//		QTextCodec::setCodecForTr(codec);

		dgpDB = new QSqlDatabase;
		*dgpDB = QSqlDatabase::addDatabase("QMYSQL", "dgpdb");
		dgpDB->setHostName("localhost");
		dgpDB->setDatabaseName("dgpdb");
		dgpDB->setUserName("dgproot");
		dgpDB->setPassword("dgproot");
		if (dgpDB->open()) {
			qDebug() << "dgpdb connect...";
			dgpDB->exec("SET NAMES 'latin1'");
		} else {
			qDebug() << dgpDB->lastError().databaseText();
			qDebug() << "dgpdb connect fali...";
		}
//	} else {
//		qDebug() << "connectCount = " << connectCount;
//		//nothing...
//	}
}

JMySQLDatabaseFactory::~JMySQLDatabaseFactory() {
//	if (!--connectCount) {
//		qDebug() << "connectCount = " << connectCount;
		qDebug() << "dgpdb close...";
		dgpDB->close();
		delete dgpDB;
//	} else {
//		qDebug() << "connectCount = " << connectCount;
//		//nothing...
//	}
}

JMySQLDatabaseFactory* JMySQLDatabaseFactory::getInstance() {
	static QObject parent;
	static JMySQLDatabaseFactory* instance = new JMySQLDatabaseFactory(&parent);
	return instance;
}

JAbstractLoginDB* JMySQLDatabaseFactory::createLoginDB() {
	return new JMySQLLoginDB(dgpDB, this);
}

JAbstractUserInfoDB* JMySQLDatabaseFactory::createUserInfoDB() {
	return new JMySQLUserInfoDB(dgpDB, this);
}

JAbstractGameInfoDB* JMySQLDatabaseFactory::createGameInfoDB() {
	return new JMySQLGameInfoDB(dgpDB, this);
}

JAbstractServerInfoDB* JMySQLDatabaseFactory::createServerInfoDB() {
	return new JMySQLServerInfoDB(dgpDB, this);
}
